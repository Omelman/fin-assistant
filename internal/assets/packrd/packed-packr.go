// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "ad3e18f5e3bdd7afa129e9344a2b2f84"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"72f9739232379fc2f8f85136edbe1b2d": "1f8b08000000000000ff548fb16ec3300c44777ec58d31da0045e176c9da5fe85cd03691b29629959212e8ef032d81bd11770fc4bdf3192f9b5e9d8be03b11cd2efd2c3c0541cde219270274c1a4d72cae1c905c37f686551a2c16580de19500d37935de0437f6f997fd34be0d074036d6f06cdf3fc601d5f4bfca815aa4b0868cbf1c6dea41e29cefd1174cad081fd81257b1e7c7cf71e8a1cb1c6fe2eda70fdc75345c88f6c25ff16e448bc7b417be10d1230000ffffb4f8306917010000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "72f9739232379fc2f8f85136edbe1b2d"})
	}()
	return nil
}()
